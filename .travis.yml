# vim ft=yaml
# travis-ci.org definition for MOxUnit build (based on CoSMoMVPA,
# which is based on PyMVPA, which is based on nipype configuration, 
# which in turn was based on nipy)
#
# We pretend to be java because we need GNU Octave which is not
# available (as of April 2015)

language: java

cache:
  # Downloading octave takes a while, so let's cache apt
  apt: true
  directories:
    # Cache octave packages
    - $HOME/octave
env:
 global:
    - OCTAVE=octave
before_install:
    # Remember the directory where our repository to test is located
    - REPOPATH="$(pwd)" && pwd
    - ADDPATH_COMMAND="addpath(genpath(fullfile(pwd)));";
    # to prevent IPv6 being used for APT
    - sudo bash -c "echo 'Acquire::ForceIPv4 \"true\";' > /etc/apt/apt.conf.d/99force-ipv4"
    - travis_retry sudo apt-get -y -qq update
    - travis_retry sudo apt-get install -y -qq software-properties-common python-software-properties
    - travis_retry sudo apt-add-repository -y ppa:octave/stable
    - travis_retry sudo apt-get -y -qq update
    # get Octave 4,0
    - travis_retry sudo apt-get -y -qq install octave liboctave-dev
    # install MOxUnit
    - cd ..
    - rm -rf MOxUnit;
    - git clone https://github.com/MOxUnit/MOxUnit.git
    - make -C MOxUnit install
    # Go back to the repository directory
    - cd ${REPOPATH}
before_script:
  - TEST_ARGS="'-recursive', '-verbose', '-junit_xml_file', 'testresults.xml'";
    TEST_COMMAND="exit(~moxunit_runtests('tests', $TEST_ARGS));";
    echo "TEST_COMMAND| $TEST_COMMAND";
  # Double-check we are still in the right directory
  - pwd
  # Check what octave packages we have installed
  - octave -q --eval "ver"
  # ---------------------------------------------------------------------------
  # Remove any cached results files from previous build, if present
  - rm -f testresults.xml;
script:
  - octave -q --eval "$ADDPATH_COMMAND $TEST_COMMAND";
